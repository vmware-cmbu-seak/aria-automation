formatVersion: 1
inputs:
  _domain_:
    type: string
    title: domain
    readOnly: true
    default: vmkloud.com
  _onDemandNetworkTag_:
    type: string
    title: onDemandNetworkTag
    readOnly: true
    default: vpc:demand
  outbounds:
    type: array
    title: Outbound Networks
    minItems: 0
    maxItems: 3
    default: []
    items:
      type: object
      title: Outbound Network
      properties:
        name:
          type: string
          title: Name
        networkCidr:
          type: string
          title: Network CIDR
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$
  privates:
    type: array
    title: Private Networks
    minItems: 0
    maxItems: 3
    default: []
    items:
      type: object
      title: Private Network
      properties:
        name:
          type: string
          title: Name
        networkCidr:
          type: string
          title: Network CIDR
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[0-9]))$
resources:
  private1:
    type: Cloud.Network
    metadata:
      layoutPosition:
        - 0
        - 0
    properties:
      name: private1-${input.privates[0].name}-${input.privates[0].networkCidr}
      networkType: private
      domain: ${input._domain_}
      networkCidr: ${input.privates[0].networkCidr}
      registerNetworkProfile: true
      constraints:
        - tag: ${input._onDemandNetworkTag_}
      tags:
        - key: vpc
          value: private1
      count: ${length(input.privates)>0?1:0}
  private2:
    type: Cloud.Network
    dependsOn:
      - private1
    metadata:
      layoutPosition:
        - 1
        - 0
    properties:
      name: private2-${input.privates[1].name}-${input.privates[1].networkCidr}
      networkType: private
      domain: ${input._domain_}
      networkCidr: ${input.privates[1].networkCidr}
      registerNetworkProfile: true
      constraints:
        - tag: ${input._onDemandNetworkTag_}
      tags:
        - key: vpc
          value: private2
      count: ${length(input.privates)>1?1:0}
  private3:
    type: Cloud.Network
    dependsOn:
      - private2
    metadata:
      layoutPosition:
        - 2
        - 0
    properties:
      name: private3-${input.privates[2].name}-${input.privates[2].networkCidr}
      networkType: private
      domain: ${input._domain_}
      networkCidr: ${input.privates[2].networkCidr}
      registerNetworkProfile: true
      constraints:
        - tag: ${input._onDemandNetworkTag_}
      tags:
        - key: vpc
          value: private3
      count: ${length(input.privates)>2?1:0}
  outbound1:
    type: Cloud.Network
    dependsOn:
      - private3
      - private2
      - private1
    metadata:
      layoutPosition:
        - 3
        - 0
    properties:
      name: outbound1-${input.outbounds[0].name}-${input.outbounds[0].networkCidr}
      networkType: outbound
      domain: ${input._domain_}
      networkCidr: ${input.outbounds[0].networkCidr}
      registerNetworkProfile: true
      constraints:
        - tag: ${input._onDemandNetworkTag_}
      tags:
        - key: vpc
          value: outbound1
      count: ${length(input.outbounds)>0?1:0}
  outbound2:
    type: Cloud.Network
    dependsOn:
      - outbound1
    metadata:
      layoutPosition:
        - 4
        - 0
    properties:
      name: outbound2-${input.outbounds[1].name}-${input.outbounds[1].networkCidr}
      networkType: outbound
      domain: ${input._domain_}
      networkCidr: ${input.outbounds[1].networkCidr}
      registerNetworkProfile: true
      constraints:
        - tag: ${input._onDemandNetworkTag_}
      tags:
        - key: vpc
          value: outbound2
      count: ${length(input.outbounds)>1?1:0}
  outbound3:
    type: Cloud.Network
    dependsOn:
      - outbound2
    metadata:
      layoutPosition:
        - 5
        - 0
    properties:
      name: outbound3-${input.outbounds[2].name}-${input.outbounds[2].networkCidr}
      networkType: outbound
      domain: ${input._domain_}
      networkCidr: ${input.outbounds[2].networkCidr}
      registerNetworkProfile: true
      constraints:
        - tag: ${input._onDemandNetworkTag_}
      tags:
        - key: vpc
          value: outbound3
      count: ${length(input.outbounds)>2?1:0}
  outboundGw:
    type: Cloud.NSX.Gateway
    metadata:
      layoutPosition:
        - 6
        - 0
    properties:
      name: ${env.projectName}
      networks: ${resource.outbound1[*].id + resource.outbound2[*].id + resource.outbound3[*].id}
      count: ${length(input.outbounds)>0?1:0}
